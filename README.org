#+TITLE:    language.c README
#+AUTHOR:   Jan Moringen
#+EMAIL:    jmoringe@techfak.uni-bielefeld.de
#+LANGUAGE: en

#+OPTIONS:  toc:nil num:nil
#+SEQ_TODO: TODO STARTED | DONE

* TODO Introduction

  This library provides parsers for the C programming language and its
  preprocessor as described in [[https://web.archive.org/web/20181230041359if_/http://www.open-std.org/jtc1/sc22/wg14/www/abq/c17_updated_proposed_fdis.pdf][Annex A of SO/IEC 9899:2017]].

* TODO Tutorial

** TODO The Preprocessor Language

*** TODO Parsing

    #+BEGIN_SRC lisp :exports results :results silent
      (ql:quickload '#:language.c.cpp.parser)
    #+END_SRC

    #+BEGIN_SRC lisp
      (language.c.cpp.parser:parse #P"/usr/include/FlexLexer.h" 'list)
    #+END_SRC

*** TODO Evaluating Syntax Trees

    #+BEGIN_SRC lisp
      (let ((ast (language.c.cpp.parser:parse
                  (format nil "#ifdef foo~@
                               #define foo 1~@
                               foo bar~@
                               baz fez~@
                               #endif~@
                               ")
                  (make-instance 'language.c.cpp.model::builder))))
        (let ((e (make-instance 'language.c.cpp.evaluator::environment)))
          (language.c.cpp.evaluator::evalute ast e *standard-output*)
          e))

      (parse "foo bar
      " 'list :rule 'text-line)

    #+END_SRC

* TODO Dictionary
